const { GoogleSpreadsheet } = require('google-spreadsheet');
const fs = require('fs')
// sweepa-app/api/src/lib/peak-comfort-361602-c2bd1bc6d886.json
// sweepa-app\api\src\lib\peak-comfort-361602-c2bd1bc6d886.json
// we need sheet ID from the
const { PRIVATE_KEY } = process.env
const { CLIENT_EMAIL } = process.env
export async function insertEmail(email, Status) {
  const doc = new GoogleSpreadsheet('1MBfmJowTVqVhCyQa1hJByk57xVzaJngEJmpGX1fvAmg');


  console.log("were inside", email)
  console.log("were inside", Status)
  // const creds = require('./peak-comfort-361602-c2bd1bc6d886.json');
  // let creds = fs.readFileSync('peak-comfort-361602-c2bd1bc6d886.json', 'utf-8')
  // console.log("creds",creds)

  // console.log("JSON", JSON.parse(PRIVATE_KEY))
  // PRIVATE_KEY2 = PRIVATE_KEY[0] === '-' ? PRIVATE_KEY : JSON.parse(PRIVATE_KEY)
  // TYPE2 = TYPE[0] === '-' ? TYPE : JSON.parse(TYPE)


  try {
    // Try to run this code
    PRIVATE_KEY2 = PRIVATE_KEY[0] === '-' ? PRIVATE_KEY : JSON.parse(PRIVATE_KEY)
  }
  catch(err) {
    // if any error, Code throws the error
    PRIVATE_KEY2 = PRIVATE_KEY
    console.log(err)
  }

  try {
    // Try to run this code
    CLIENT_EMAIL2 = CLIENT_EMAIL[0] === '-' ? CLIENT_EMAIL : JSON.parse(CLIENT_EMAIL)
  }
  catch(err) {
    // if any error, Code throws the error
    CLIENT_EMAIL2 = CLIENT_EMAIL
    console.log(err)
  }
  // PROJECT_ID2
  const serviceCredential = {
// env var values are copied from service account credentials generated by google
  // see "Authentication" section in docs for more info
  type: process.env.TYPE,
  project_id: process.env.PROJECT_ID,
  private_key_id: process.env.PRIVATE_KEY_ID,
  // private_key: process.env.PRIVATE_KEY.replace(/\\n/gm, "\n"),
  // private_key: JSON.parse(process.env.PRIVATE_KEY.replace(/\\n/gm, "\n")),
  private_key: PRIVATE_KEY2,
  // JSON.parse(${process.env.GATSBY_CREDENTIALS})
  client_email: CLIENT_EMAIL2,
  client_id: process.env.CLIENT_ID,
  auth_uri: process.env.AUTH_URI,
  token_uri: process.env.TOKEN_URI,
  auth_provider_x509_cert_url: process.env.AUTH_PROVIDER_X509_CERT_URL,
  client_x509_cert_url: process.env.CLIENT_X509_CERT_URL
  }

//  await doc.useServiceAccountAuth(creds);
// Initialize Auth - see https://theoephraim.github.io/node-google-spreadsheet/#/getting-started/authentication

try {
  // Try to run this code
  await doc.useServiceAccountAuth(serviceCredential);
  const docStatus = await doc.loadInfo(); // loads document properties and worksheets
  console.log(docStatus)
  console.log("Test UserServiceAccountAuth", doc.title);
}
catch(err) {
  // if any error, Code throws the error
  console.log(err)
}



try {
  // Try to run this code
  delay(1000).then(() => console.log('ran after 1 second1 passed'));
  const sheet = doc.sheetsByIndex[0]; // or use doc.sheetsById[id] or doc.sheetsByTitle[title]
  console.log("Google sheet title", sheet.title);
  console.log("Row Count", sheet.rowCount);
  sheet.addRow({  email:  email, Status:Status });
}
catch(err) {
  // if any error, Code throws the error
  console.log(err)
}


return {
  headers: {},
  statuscode: 200,
  body: JSON.stringify('Success 200')
}
}

